service: ${file(serverless.config.js):repositoryName}

frameworkVersion: ^2.2.0

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-dotenv-plugin
  - serverless-configuration
  - serverless-dynamodb-local
  - serverless-plugin-resource-tagging
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  cfnRole: arn:${env:AWS_PARTITION}:iam::${env:AWS_ACCOUNT_ID}:role/${self:service}-cloudformation
  stage: ${opt:stage, "local"}
  apiKeys:
    - ${self:service}-${opt:stage, "local"}
  apiGateway:
    restApiId: ${env:AWS_REST_API_ID}
    restApiRootResourceId: ${env:AWS_REST_API_ROOT_RESOURCE_ID}
  tracing:
    lambda: true
  environment:
    SERVICE_NAME: ${self:service}
    STAGE: ${opt:stage, "local"}
  stackTags:
    ServiceName: ${self:service}
    ServiceStage: ${opt:stage, "local"}

functions:
  joke-R-v1:
    role: arn:${env:AWS_PARTITION}:iam::${env:AWS_ACCOUNT_ID}:role/${self:service}-${opt:stage, "local"}
    handler: src/index.getJokeV1
    events:
      - http:
          path: api/v1/joke
          method: get
          cors: true

resources:
  Resources:
    Accounts:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${opt:stage, "local"}-${self:service}-accounts
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        SSESpecification:
          SSEEnabled: true
        BillingMode: PAY_PER_REQUEST

custom:
  serverless-offline:
    useChildProcesses: false
    noPrependStageInUrl: true
    prefix: ${file(serverless.config.js):serviceName}
  bundle:
    packager: yarn
    copyFiles:
      - from: './.scaffoldly/${opt:stage, "local"}'
        to: './.scaffoldly'
  serverless-configuration:
    local:
      del:
        - provider.apiGateway.restApiId
        - provider.apiGateway.restApiRootResourceId
        # - custom.bundle.copyFiles
  dynamodb:
    stages:
      - local
    start:
      port: 8100
      dbPath: .dynamodb
      migrate: true
